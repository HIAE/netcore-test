// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Teste.Models;

namespace Teste.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20220216171205_InitialCreate")]
    partial class InitialCreate
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.14")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Teste.Models.Consulta", b =>
                {
                    b.Property<int>("IdConsulta")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("HorarioFinish")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("HorarioStart")
                        .HasColumnType("datetime2");

                    b.Property<int>("MedicoID")
                        .HasColumnType("int");

                    b.Property<int>("PacienteID")
                        .HasColumnType("int");

                    b.HasKey("IdConsulta");

                    b.HasIndex("MedicoID");

                    b.HasIndex("PacienteID");

                    b.ToTable("ConsultaDB");
                });

            modelBuilder.Entity("Teste.Models.Medico", b =>
                {
                    b.Property<int>("MedicoID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("MedicoName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("MedicoID");

                    b.ToTable("MedicosDB");

                    b.HasData(
                        new
                        {
                            MedicoID = 1,
                            MedicoName = "Rogerio"
                        },
                        new
                        {
                            MedicoID = 2,
                            MedicoName = "Carlos"
                        },
                        new
                        {
                            MedicoID = 3,
                            MedicoName = "Alberto"
                        });
                });

            modelBuilder.Entity("Teste.Models.Paciente", b =>
                {
                    b.Property<int>("PacienteID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("PacienteName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("PacienteID");

                    b.ToTable("PacientesDB");

                    b.HasData(
                        new
                        {
                            PacienteID = 1,
                            PacienteName = "Carla"
                        },
                        new
                        {
                            PacienteID = 2,
                            PacienteName = "Rosana"
                        },
                        new
                        {
                            PacienteID = 3,
                            PacienteName = "Maria"
                        });
                });

            modelBuilder.Entity("Teste.Models.Consulta", b =>
                {
                    b.HasOne("Teste.Models.Medico", "Medico")
                        .WithMany()
                        .HasForeignKey("MedicoID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Teste.Models.Paciente", "Paciente")
                        .WithMany()
                        .HasForeignKey("PacienteID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Medico");

                    b.Navigation("Paciente");
                });
#pragma warning restore 612, 618
        }
    }
}
